"""Initial migration

Revision ID: ecada38f6805
Revises: 
Create Date: 2025-03-22 03:29:58.261606

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ecada38f6805'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("DROP SCHEMA public CASCADE;")
    op.execute("CREATE SCHEMA public;")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Dim_Locations',
    sa.Column('location_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Dim_Locations_location_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('market', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('province', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('location_id', name='Dim_Locations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Dim_Locations_location_id', 'Dim_Locations', ['location_id'], unique=False)
    op.create_table('Dim_Purchances',
    sa.Column('purchance_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Dim_Purchances_purchance_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('purchance_type', postgresql.ENUM('bulk', 'warranty', name='purchancetype'), autoincrement=False, nullable=False),
    sa.Column('purchance_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('part_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['part_id'], ['Dim_Parts.part_id'], name='Dim_Purchances_part_id_fkey'),
    sa.PrimaryKeyConstraint('purchance_id', name='Dim_Purchances_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Dim_Purchances_purchance_id', 'Dim_Purchances', ['purchance_id'], unique=False)
    op.create_table('Dim_Vehicle',
    sa.Column('vehicle_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Dim_Vehicle_vehicle_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('model', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('prod_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('propulsion', postgresql.ENUM('eletric', 'hybrid', 'gas', name='propulsiontype'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('vehicle_id', name='Dim_Vehicle_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Dim_Vehicle_vehicle_id', 'Dim_Vehicle', ['vehicle_id'], unique=False)
    op.create_table('Dim_Supplier',
    sa.Column('supplier_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Dim_Supplier_supplier_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('supplier_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['Dim_Locations.location_id'], name='Dim_Supplier_location_id_fkey'),
    sa.PrimaryKeyConstraint('supplier_id', name='Dim_Supplier_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Dim_Supplier_supplier_id', 'Dim_Supplier', ['supplier_id'], unique=False)
    op.create_table('Fact_Warranties',
    sa.Column('claim_key', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('repair_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('client_comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tech_comment', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('part_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('classifed_failured', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('purchance_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['Dim_Locations.location_id'], name='Fact_Warranties_location_id_fkey'),
    sa.ForeignKeyConstraint(['part_id'], ['Dim_Parts.part_id'], name='Fact_Warranties_part_id_fkey'),
    sa.ForeignKeyConstraint(['purchance_id'], ['Dim_Purchances.purchance_id'], name='Fact_Warranties_purchance_id_fkey'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['Dim_Vehicle.vehicle_id'], name='Fact_Warranties_vehicle_id_fkey'),
    sa.PrimaryKeyConstraint('claim_key', name='Fact_Warranties_pkey'),
    sa.UniqueConstraint('vehicle_id', name='Fact_Warranties_vehicle_id_key')
    )
    op.create_index('ix_Fact_Warranties_claim_key', 'Fact_Warranties', ['claim_key'], unique=False)
    op.create_table('Dim_Parts',
    sa.Column('part_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('part_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('last_id_purchase', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('supplier_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['last_id_purchase'], ['Dim_Purchances.purchance_id'], name='Dim_Parts_last_id_purchase_fkey'),
    sa.ForeignKeyConstraint(['supplier_id'], ['Dim_Supplier.supplier_id'], name='Dim_Parts_supplier_id_fkey'),
    sa.PrimaryKeyConstraint('part_id', name='Dim_Parts_pkey')
    )
    op.create_index('ix_Dim_Parts_part_id', 'Dim_Parts', ['part_id'], unique=False)
    # ### end Alembic commands ###
